export const PRIMITIVES = {
	// Strings
	STRING_EMPTY: "",
	STRING_NONEMPTY: "a string",
	STRING_VIA_CONSTRUCTOR: new String("constructed"),

	// Numeric strings
	STRING_NEGATIVE_INTEGER: "-10",
	STRING_POSITIVE_INTEGER: "5",
	STRING_OCTAL_LITERAL: "040",
	STRING_HEX_LITERAL: "0xFF",
	STRING_POSITIVE_FLOAT: "4.5385",
	STRING_NEGATIVE_FLOAT: "-5.592",
	STRING_EXPONENTIAL: "123e4",
	STRING_NEGATIVE_EXPONENTIAL: "-83e-6",

	// Seminumeric strings (edge cases)
	STRING_BEGIN_NUMBER: "10abcdef",
	STRING_END_NUMBER: "abcdef10",
	STRING_WRAP_NUMBER: "10abcd10",
	STRING_WRAPPED_NUMBER: "abc10def",

	// Numbers
	NUMBER_ZERO: 0,
	NUMBER_POSITIVE: 1000,
	NUMBER_NEGATIVE: -1000,
	NUMBER_FLOAT_POSITIVE: 1.5,
	NUMBER_FLOAT_NEGATIVE: -3.6,
	NUMBER_EXPONENTIAL_POSITIVE: 1.2e3,
	NUMBER_EXPONENTIAL_NEGATIVE: -3.2e-5,
	NUMBER_OCTAL_POSITIVE: 0o70,
	NUMBER_OCTAL_NEGATIVE: -0o10,
	NUMBER_HEX_POSITIVE: 0xab,
	NUMBER_HEX_NEGATIVE: -0xcc,
	NUMBER_INFINITY: Infinity,
	NUMBER_NEGATIVE_INFINITY: -Infinity,
	NUMBER_VIA_CONSTRUCTOR: new Number(5),

	// Booleans
	BOOLEAN_TRUE: true,
	BOOLEAN_FALSE: false,
	BOOLEAN_TRUE_VIA_CONSTRUCTOR: new Boolean(true),
	BOOLEAN_FALSE_VIA_CONSTRUCTOR: new Boolean(false),

	// Symbol
	SYMBOL_EMPTY_STRING: Symbol(""),
	SYMBOL_WITH_STRING: Symbol("this is a symbol string"),
	SYMBOL_NO_PARAMETER: Symbol(),
	SYMBOL_STATIC: Symbol.iterator,

	// BigInt
	BIGINT_LITERAL: BigInt(1234),

	// Remainder
	NULL: null,

	UNDEFINED: undefined,
};
